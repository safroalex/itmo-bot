#!/opt/anaconda3/envs/itmo-bot/bin/python
import requests
import json
import time

# URL API –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_URL = "http://localhost:8081/api/request"

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é = –≤—Å–µ)
NUM_TESTS = 17  # –ò–∑–º–µ–Ω–∏—Ç–µ —á–∏—Å–ª–æ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–µ–Ω—å—à–µ —Ç–µ—Å—Ç–æ–≤

# –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Å –æ–∂–∏–¥–∞–µ–º—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
test_cases = [
    {
        "id": 1,
        "query": (
            "–í –∫–∞–∫–æ–º –≥–æ–¥—É –±—ã–ª –æ—Å–Ω–æ–≤–∞–Ω –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ò–¢–ú–û?\n"
            "1. 1900\n"
            "2. 1905\n"
            "3. 1918\n"
            "4. 1930"
        ),
        "expected_answer": 1  # 1900
    },
    {
        "id": 2,
        "query": (
            "–ö–∞–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ—Å–∏–ª –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ò–¢–ú–û –≤ —Å–æ–≤–µ—Ç—Å–∫–æ–µ –≤—Ä–µ–º—è?\n"
            "1. –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç —Ç–æ—á–Ω–æ–π –º–µ—Ö–∞–Ω–∏–∫–∏ –∏ –æ–ø—Ç–∏–∫–∏ (–õ–ò–¢–ú–û)\n"
            "2. –ò–Ω—Å—Ç–∏—Ç—É—Ç –≤—ã—Å–æ–∫–æ—Ç–æ—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º (–ò–í–°)\n"
            "3. –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ (–õ–ò–í–¢)\n"
            "4. –ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç –º–µ—Ö–∞–Ω–∏–∫–∏ –∏ –æ–ø—Ç–∏–∫–∏ (–ü–ò–ú–û)"
        ),
        "expected_answer": 1  # –õ–ò–¢–ú–û
    },
    {
        "id": 3,
        "query": (
            "–í –∫–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ (—Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–π—Ç–∏–Ω–≥—É QS by Subject 2022) "
            "–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ò–¢–ú–û –≤—Ö–æ–¥–∏—Ç –≤ —Ç–æ–ø-100?\n"
            "1. Computer Science & Information Systems\n"
            "2. Physics & Astronomy\n"
            "3. Mathematics\n"
            "4. Engineering - Electrical & Electronic"
        ),
        "expected_answer": 1  # Computer Science & Information Systems
    },
    {
        "id": 4,
        "query": (
            "–°–∫–æ–ª—å–∫–æ –º–µ–≥–∞—Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –ò–¢–ú–û?\n"
            "1. 3\n"
            "2. 4\n"
            "3. 5\n"
            "4. 6"
        ),
        "expected_answer": 3  # 5 –º–µ–≥–∞—Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤
    },
    {
        "id": 5,
        "query": (
            "–í –∫–∞–∫–æ–º —Ä–∞–π–æ–Ω–µ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≥–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ò–¢–ú–û "
            "–Ω–∞ –ö—Ä–æ–Ω–≤–µ—Ä–∫—Å–∫–æ–º –ø—Ä–æ—Å–ø–µ–∫—Ç–µ, 49?\n"
            "1. –ê–¥–º–∏—Ä–∞–ª—Ç–µ–π—Å–∫–∏–π —Ä–∞–π–æ–Ω\n"
            "2. –ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω\n"
            "3. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω\n"
            "4. –í–∞—Å–∏–ª–µ–æ—Å—Ç—Ä–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω"
        ),
        "expected_answer": 2  # –ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω
    },
    {
        "id": 6,
        "query": (
            "–ö–∞–∫–∞—è –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –≤ –ò–¢–ú–û —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è "
            "–Ω–∞ –¥–∏–∑–∞–π–Ω–µ –∏ –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞?\n"
            "1. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\n"
            "2. –•–∏–º–∏—á–µ—Å–∫–∞—è –±–∏–æ–ª–æ–≥–∏—è\n"
            "3. Technological Art & Design\n"
            "4. –ö–∏–±–µ—Ä—Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã"
        ),
        "expected_answer": 3  # Technological Art & Design
    },
    {
        "id": 7,
        "query": (
            "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –±–∏–∑–Ω–µ—Å-–∞–∫—Å–µ–ª–µ—Ä–∞—Ç–æ—Ä, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø—Ä–∏ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –ò–¢–ú–û?\n"
            "1. Future Technologies\n"
            "2. IIDF (–§–†–ò–ò)\n"
            "3. ITMO Accelerator\n"
            "4. Skolkovo"
        ),
        "expected_answer": 3  # ITMO Accelerator
    },
    {
        "id": 8,
        "query": (
            "–ö–∞–∫–æ–π —Å—Ç–∞—Ç—É—Å –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ò–¢–ú–û –∏–º–µ–ª –≤ —Ä–∞–º–∫–∞—Ö –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã ¬´–ü—Ä–æ–µ–∫—Ç 5-100¬ª?\n"
            "1. –õ–∏–¥–µ—Ä\n"
            "2. –£—á–∞—Å—Ç–Ω–∏–∫\n"
            "3. –≠–∫—Å–ø–µ—Ä—Ç\n"
            "4. –ù–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª"
        ),
        "expected_answer": 2  # –£—á–∞—Å—Ç–Ω–∏–∫
    },
    {
        "id": 9,
        "query": (
            "–ö –∫–∞–∫–æ–º—É –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ò–¢–ú–û?\n"
            "1. –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –∫—É–ª—å—Ç—É—Ä—ã –†–§\n"
            "2. –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –Ω–∞—É–∫–∏ –∏ –≤—ã—Å—à–µ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –†–§\n"
            "3. –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –†–§\n"
            "4. –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –†–§"
        ),
        "expected_answer": 2  # –ú–∏–Ω–æ–±—Ä–Ω–∞—É–∫–∏ –†–§
    },
    {
        "id": 10,
        "query": (
            "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∞—è –º–µ–¥–∏–∞-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ (–æ–Ω–ª–∞–π–Ω-–∏–∑–¥–∞–Ω–∏–µ) –ò–¢–ú–û?\n"
            "1. ITMO.News\n"
            "2. GO ITMO\n"
            "3. ITMO Media\n"
            "4. ITMO Journal"
        ),
        "expected_answer": 1  # ITMO.News
    },
    {
        "id": 11,
        "query": (
            "–í –∫–∞–∫–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ò–¢–ú–û –æ—Å–æ–±–µ–Ω–Ω–æ —Å–∏–ª—ë–Ω, "
            "—Å–æ–≥–ª–∞—Å–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏–º —Ä–µ–π—Ç–∏–Ω–≥–∞–º?\n"
            "1. –ù–µ–π—Ä–æ–±–∏–æ–ª–æ–≥–∏—è\n"
            "2. –§–æ—Ç–æ–Ω–∏–∫–∞\n"
            "3. –ì–µ–æ–ª–æ–≥–∏—è\n"
            "4. –°–æ—Ü–∏–æ–ª–æ–≥–∏—è"
        ),
        "expected_answer": 2  # –§–æ—Ç–æ–Ω–∏–∫–∞
    },
    {
        "id": 12,
        "query": (
            "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π —Å—Ç—É–¥–µ–Ω—Ç—ã –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ò–¢–ú–û –º–æ–≥—É—Ç "
            "–æ—Ñ–æ—Ä–º–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç–∞–ø –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—ã–ø—É—Å–∫–Ω–æ–π –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã?\n"
            "1. Startup as Art\n"
            "2. IGoStartup\n"
            "3. Startup as Thesis\n"
            "4. ITMO Business Incubator"
        ),
        "expected_answer": 3  # Startup as Thesis
    },
    {
        "id": 13,
        "query": (
            "–í –∫–∞–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ ITMO –∞–∫—Ç–∏–≤–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–ª —Å –≠—Ä–º–∏—Ç–∞–∂–µ–º, —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—è AR/VR-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏?\n"
            "1. –ü—Ä–æ–µ–∫—Ç ¬´–¶–∏—Ñ—Ä–æ–≤–∞—è –≠—Ä–º–∏—Ç–∞–∂-–±–∏–±–ª–∏–æ—Ç–µ–∫–∞¬ª\n"
            "2. Art&Science Project\n"
            "3. Hermitage.Connected\n"
            "4. Museum Vision Initiative"
        ),
        "expected_answer": 3  # Hermitage.Connected
    },
    {
        "id": 14,
        "query": (
            "–ö–∞–∫—É—é –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é (–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è) –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –ò–¢–ú–û?\n"
            "1. –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã\n"
            "2. eHealth Lab\n"
            "3. Smart Health IT\n"
            "4. ITMO Health & AI"
        ),
        "expected_answer": 2  # eHealth Lab
    },
    {
        "id": 15,
        "query": (
            "–°–∫–æ–ª—å–∫–æ –º–µ–≥–∞–≥—Ä–∞–Ω—Ç–æ–≤ (–ø–æ –¥–∞–Ω–Ω—ã–º –Ω–∞ 2022 –≥–æ–¥) —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ —Å —É—á–∞—Å—Ç–∏–µ–º —É—á—ë–Ω—ã—Ö "
            "–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ò–¢–ú–û (–≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§)?\n"
            "1. –ú–µ–Ω–µ–µ 5\n"
            "2. –û—Ç 5 –¥–æ 10\n"
            "3. –û—Ç 10 –¥–æ 15\n"
            "4. –ë–æ–ª–µ–µ 15"
        ),
        "expected_answer": 2  # –ü–æ –¥–∞–Ω–Ω—ã–º –ò–¢–ú–û ~ 8 –º–µ–≥–∞–≥—Ä–∞–Ω—Ç–æ–≤ (–≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è) 
    },
    {
        "id": 16,
        "query": "–í –∫–∞–∫–æ–º –≥–æ–¥—É –±—ã–ª –æ—Å–Ω–æ–≤–∞–Ω –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ò–¢–ú–û?",
        "expected_answer": None  # –ù–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ -> answer = None
    },
    {
        "id": 17,
        "query": "–ö–∞–∫–æ–≤–∞ –æ—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å –ø—Ä–æ–≥—Ä–∞–º–º—ã '–ù–∞—É—á–Ω–∞—è –≤–µ—Å–Ω–∞' –≤ –ò–¢–ú–û?",
        "expected_answer": None  # –ù–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ -> answer = None
    }
]

# –û–±—Ä–µ–∑–∞–µ–º —Ç–µ—Å—Ç—ã –¥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ NUM_TESTS
test_cases = test_cases[:NUM_TESTS]

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
start_time = time.time()

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
correct = 0
incorrect = 0
detailed_results = []

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
for test in test_cases:
    print("\n=== Running Test ===")
    print(f"üìù Test ID: {test['id']}")
    print("üîç Question:", test['query'].split("\n")[0], "\n")

    response = requests.post(BOT_URL, json={"query": test["query"], "id": test["id"]})
    
    if response.status_code == 200:
        data = response.json()
        bot_answer = data.get("answer")
        reasoning = data.get("reasoning", "No reasoning provided")
        sources = data.get("sources", [])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
        is_correct = bot_answer == test["expected_answer"]
        if is_correct:
            correct += 1
        else:
            incorrect += 1

        # –õ–æ–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        detailed_results.append({
            "id": test["id"],
            "question": test["query"].split("\n")[0],  # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
            "expected": test["expected_answer"],
            "received": bot_answer,
            "status": "‚úÖ Correct" if is_correct else "‚ùå Incorrect"
        })

        # –í—ã–≤–æ–¥ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∞
        print(f"‚úÖ API Response: {json.dumps(data, indent=2, ensure_ascii=False)}")

    else:
        incorrect += 1
        detailed_results.append({
            "id": test["id"],
            "question": test["query"].split("\n")[0],
            "expected": test["expected_answer"],
            "received": f"Error {response.status_code}",
            "status": "‚ùå API Error"
        })

        # –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏
        print(f"‚ùå API Error: {response.status_code}")

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
end_time = time.time()
total_time = end_time - start_time

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
print("\n=== Test Results ===")
print(f"‚úÖ Correct: {correct}")
print(f"‚ùå Incorrect: {incorrect}")
print(f"‚è≥ Total execution time: {total_time:.2f} seconds\n")

# –í—ã—Ö–æ–¥ —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã
if incorrect > 0:
    exit(1)
else:
    exit(0)